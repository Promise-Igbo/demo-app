name: Deploy to AKS

# When this action will be executed
on:
  push:
    branches: 
      - main

  # Allow manual trigger 
  workflow_dispatch:      

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_NAME }} 
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.ACR_NAME }}/demo-app:${{ github.sha }}, ${{ secrets.ACR_NAME }}/demo-app:latest
          file: ./Dockerfile

      # - name: Update Image Version in GitOps Repo
      #   run: |
      #     git clone https://github.com/Promise-Igbo/demo-app.git
      #     cd demo-app/k8s/dev
      #     sed -i 's|image: .*$|image: ${{ secrets.ACR_NAME }}/demo-app:${{ github.sha }}|' dev/deployment-dev.yaml
      #     git add dev/deployment-dev.yaml
      #     git commit -m "Update image to ${{ github.sha }}"

      #     sed -i 's|image: .*$|image: ${{ secrets.ACR_NAME }}/demo-app:${{ github.sha }}|' stage/deployment-stage.yaml
      #     git add stage/deployment-stage.yaml
      #     git commit -m "Update image in stage to ${{ github.sha }}"

      #     git push origin main

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubectl for AKS
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.2'  # You can specify the version you need

      - name: Configure kubectl to access AKS cluster
        run: |
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER }}

      - name: Deploy to AKS
        run: |
          # kubectl set image deployment/my-app my-app=${{ secrets.ACR_NAME }}/demo-app:${{ github.sha }} -n default
          # kubectl rollout status deployment/my-app -n default
          kubectl apply -k ./cluster/ 
        # Automatically applies all resources from the GitOps repo
